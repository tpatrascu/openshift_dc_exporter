apiVersion: v1
kind: Template
metadata:
  name: dc-exporter
parameters:
  - name: SOURCE_REPOSITORY_URL 
    displayName: Source Repository URL 
    description: The URL of the repository with your application source code 
    value: https://github.com/tpatrascu/openshift_dc_exporter
    required: true
  - name: NAMESPACE
    displayName: Namespace
    description: Project to install it in
    value: prometheus
    required: true

objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: dc-exporter
    name: dc-exporter
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: dc-exporter
    name: dc-exporter
    namespace: ${NAMESPACE}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: dc-exporter:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:2.7
          namespace: openshift
      type: Source
    triggers:
    - generic:
        secret: d7a56f84457fd841
      type: Generic
    - github:
        secret: 2550fe38c1201824
      type: GitHub
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app: dc-exporter
    name: dc-exporter
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: ClusterRoleBinding
  metadata:
    name: dc-exporter-cluster-reader
    namespace: ${NAMESPACE}
  roleRef:
    name: cluster-reader
  subjects:
  - kind: ServiceAccount
    name: dc-exporter
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: dc-exporter
    name: dc-exporter
    namespace: ${NAMESPACE}
  spec:
    replicas: 1
    selector:
      deploymentconfig: dc-exporter
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: dc-exporter
          deploymentconfig: dc-exporter
      spec:
        serviceAccount: dc-exporter
        serviceAccountName: dc-exporter
        containers:
        - image: 
          imagePullPolicy: Always
          name: dc-exporter
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - dc-exporter
        from:
          kind: ImageStreamTag
          name: dc-exporter:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    labels:
      app: dc-exporter
    name: dc-exporter
    namespace: ${NAMESPACE}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: dc-exporter
    sessionAffinity: None
    type: ClusterIP
